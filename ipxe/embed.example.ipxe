#!ipxe

# format: set <variable_name> <variable_value>
# only change the values, typically just the url_prefix one
set url_prefix http://netboot/images/noble/
set kernel vmlinuz
set initrd initrd.img
set iso filesystem.iso

# by default we test network connectivity using IPv4 and Google DNS
set net_dns 8.8.8.8
set net_dns_name dns.google

# by default we boot our iso
set whattoboot linuxboot

# open all interfaces
ifopen

:menu
menu Will boot ${whattoboot}. Please choose from the menu.
item trydhcp   try booting via dhcp first, then return here if it fails
item readit    ask for network config and try to boot
item bootxyz   what to boot switch: chainload of netboot.xyz
item bootour   what to boot switch: our linuxboot
item configure configure ipxe
item ipxeshell ipxe shell
choose --default trydhcp --timeout 25000 target && goto ${target} || goto menu

:bootxyz
set whattoboot netbootxyz
goto menu

:bootour
set whattoboot linuxboot
goto menu

:configure
config
goto menu

:ipxeshell
shell
goto menu

:trydhcp
set test_card net0
set test_return trydhcp1
goto pingtest_dhcp_run
:trydhcp1
set test_card net1
set test_return trydhcp2
goto pingtest_dhcp_run
:trydhcp2
set test_card net2
set test_return trydhcp3
goto pingtest_dhcp_run
:trydhcp3
set test_card net3
set test_return trydhcp4
goto pingtest_dhcp_run
:trydhcp4
set test_card net4
set test_return nocardpinged
goto pingtest_dhcp_run

:readit
echo Enter local IPv4 address:
read net_ip
echo Enter local IPv4 gateway - local IP is prefilled, just adjust it:
set net_gw ${net_ip}
read net_gw
set net_mask 255.255.255.0
echo Enter local mask - 255.255.255.0 is prefilled, change if needed:
read net_mask
echo Confirm the use ${net_dns} as the DNS for test or change the DNS IP NOW
read net_dns
# fall through to pingtest

:pingtest0
set test_card net0
set test_return pingtest1
goto pingtest_run
:pingtest1
set test_card net1
set test_return pingtest2
goto pingtest_run
:pingtest2
set test_card net2
set test_return pingtest3
goto pingtest_run
:pingtest3
set test_card net3
set test_return pingtest4
goto pingtest_run
:pingtest4
set test_card net4
set test_return nocardpinged
goto pingtest_run

:nocardpinged
echo No card pinged. Sorry.
goto failed

:pingtest_dhcp_run
echo Testing card ${test_card} and pinging ${net_dns_name}
ifconf ${test_card} || goto ${test_return}
ping --count 3 ${net_dns_name} && goto ping_done1 || goto ping_done2

:pingtest_run
echo Testing card ${test_card} and pinging ${net_dns_name}
ifopen ${test_card} || goto ${test_return}
set ${test_card}/ip ${net_ip} || goto readit
set ${test_card}/netmask ${net_mask} || goto readit
set ${test_card}/gateway ${net_gw} || goto readit
set ${test_card}/dns ${net_dns} || goto readit
set dns ${net_dns} || goto readit
ping --count 3 ${net_dns_name} && goto ping_done1 || goto ping_done2

:ping_done1
echo OK, will use ${test_card}
set dns ${net_dns}
goto ${whattoboot}

:ping_done2
echo No, will not use ${test_card}
set ${test_card}/ip 0.0.0.0
set ${test_card}/netmask 255.255.255.0
set ${test_card}/gateway 0.0.0.0
set ${test_card}/dns 0.0.0.0
set dns 0.0.0.0
goto ${test_return}

# https://askubuntu.com/questions/1128105/how-do-i-set-the-nameserver-dns-for-ubuntus-initramfs
# ip=<client-ip>:<server-ip>:<gw-ip>:<netmask>:<hostname>:<device>:<autoconf>:<dns0-ip>:<dns1-ip>:<ntp0-ip>

:linuxboot
set net_mac ${${test_card}/mac:hexhyp}
echo using card ${test_card} mac ${net_mac}
echo using ip ${${test_card}/ip} gw ${${test_card}/gateway} mask ${${test_card}/netmask}
echo using dns ${net_dns}

# set the cmdline
set cmdline boot=casper noprompt noeject live-config.username=root BOOTIF=01-${net_mac} showmounts url=${url_prefix}${iso} ip=${${test_card}/ip}::${${test_card}/gateway}:${${test_card}/netmask}:::off:${net_dns} ip6=none ipv6=accept_ra=2

# echo testing that we can ping hostname "${net_dns_name}"
# ping --count 3 ${net_dns_name} && goto boot1 || goto boot1
:boot1
kernel ${url_prefix}${kernel} initrd=${initrd} ${cmdline} || goto failed1
initrd ${url_prefix}${initrd} || goto failed1
imgstat
boot && goto menu || goto failed1

:failed1
echo Sleeping 30 seconds to let the network settle down and retry
sleep 30
ping --count 3 ${net_dns_name} && goto boot2 || goto boot2
:boot2
kernel ${url_prefix}${kernel} initrd=${initrd} ${cmdline} || goto failed
initrd ${url_prefix}${initrd} || goto failed
imgstat
boot && goto menu || goto failed

:failed
echo Boot of the last item failed. Waiting 15 secs, then returning to menu.
sleep 15
goto menu

:netbootxyz
chain --autofree http://boot.netboot.xyz || goto failed
